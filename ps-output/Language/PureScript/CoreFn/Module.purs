-- File auto generated by purescript-bridge! --
module Language.PureScript.CoreFn.Module where

import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe(..))
import Data.Newtype (class Newtype)
import Data.Symbol (SProxy(SProxy))
import Data.Tuple (Tuple)
import Language.PureScript.Comments (Comment)
import Language.PureScript.CoreFn.Expr (Bind)
import Language.PureScript.Names (Ident, ModuleName)
import Language.PureScript.Types (Type)
import Prim (Array)

import Prelude
import Data.Generic (class Generic)

newtype Module a =
    Module {
      moduleComments :: Array Comment
    , moduleName :: ModuleName
    , moduleImports :: Array (Tuple a ModuleName)
    , moduleExports :: Array Ident
    , moduleForeign :: Array (Tuple Ident Type)
    , moduleDecls :: Array (Bind a)
    }

derive instance genericModule :: Generic a => Generic (Module a)

derive instance newtypeModule :: Newtype (Module a) _


--------------------------------------------------------------------------------
_Module :: forall a. Iso' (Module a) { moduleComments :: Array Comment, moduleName :: ModuleName, moduleImports :: Array (Tuple a ModuleName), moduleExports :: Array Ident, moduleForeign :: Array (Tuple Ident Type), moduleDecls :: Array (Bind a)}
_Module = _Newtype

--------------------------------------------------------------------------------
